services:
  vaultwarden:
    image: vaultwarden/server:latest
    user: 1:1000
    environment:
      #ADMIN_TOKEN:
      SIGNUPS_ALLOWED: "false"
      WEBSOCKET_PORT: 443
      WEBSOCKET_ENABLED: "true"
      DOMAIN: "https://vault.${HOST_URL}"
    volumes:
      - /home/vincent/docker/vaultwarden/:/data
    labels:
      - "traefik.http.routers.vaultwarden.rule=Host(`vault.${HOST_URL}`)"
      - "traefik.http.routers.vaultwarden.service=vaultwarden"
      - "traefik.http.routers.vaultwarden.entrypoints=https"
      - "traefik.http.routers.vaultwarden.tls=true"
      - "traefik.http.routers.vaultwarden.tls.certresolver=default"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"
      - "traefik.enable=true"
    restart: unless-stopped
    networks:
      - traefik
  gotify:
    image: gotify/server
    user: 1:1000
    environment:
      GOTIFY_DEFAULTUSER_PASS:
    volumes:
      - /home/vincent/docker/gotify/:/app/data
    labels:
      - "traefik.http.routers.gotify.rule=Host(`gotify.${HOST_URL}`)"
      - "traefik.http.routers.gotify.service=gotify"
      - "traefik.http.routers.gotify.entrypoints=https"
      - "traefik.http.routers.gotify.tls=true"
      - "traefik.http.routers.gotify.tls.certresolver=default"
      - "traefik.http.services.gotify.loadbalancer.server.port=80"
      - "traefik.enable=true"
    restart: unless-stopped
    networks:
      - traefik

  transmission:
    build: ./transmission
    ports:
      - "51413:51413/udp"
      - "51413:51413"
    environment:
      TRANSMISSION_PASSWORD:
    networks:
      - traefik
    volumes:
      - /home/vincent/downloads:/var/lib/transmission-daemon/downloads
      - /home/vincent/docker/transmission/cfg/:/etc/transmission-daemon/
    restart: unless-stopped
    labels:
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "traefik.http.routers.transmission.rule=Host(`torrent.${HOST_URL}`)"
      - "traefik.http.routers.transmission.entrypoints=https"
      - "traefik.http.routers.transmission.tls=true"
      - "traefik.http.routers.transmission.tls.certresolver=default"
      - "traefik.enable=true"
        #  syncthing:
        #    build: ./syncthing/docker
        #    image: syncthing:latest
        #    networks:
        #      - webgateway
        #    volumes:
        #      - /home/vincent/docker/syncthing:/var/syncthing
        #    restart: always
        #    ports:
        #      - "22000:22000"
        #      - "8384:8384"
  nextcloud:
    build: ../docker-nextcloud
    #image: nextcloud:php8
    networks:
      - traefik
      - database
    volumes:
      - /home/vincent/docker/nextcloud:/data/
    restart: unless-stopped
    labels:
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.${HOST_URL}`)"
      - "traefik.http.routers.nextcloud.entrypoints=https"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=default"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-header,nextcloud-dav"
      - "traefik.http.middlewares.nextcloud-header.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow"
      - "traefik.http.middlewares.nextcloud-header.headers.customResponseHeaders.X-Frame-Options=SAMEORIGIN"
      - "traefik.http.middlewares.nextcloud-header.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.nextcloud-header.headers.frameDeny=false"
      - "traefik.http.middlewares.nextcloud-dav.replacepathregex.regex=^/.well-known/ca(l|rd)dav"
      - "traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement=/remote.php/dav/"
      - "traefik.enable=true"
      - "traefik.docker.network=docker_config_traefik"
  database:
    image: postgres:17
    environment:
      POSTGRES_PASSWORD:
    networks:
      - database
    volumes:
      - /home/vincent/docker/postgres17:/var/lib/postgresql/data
    restart: unless-stopped
    labels:
      - "traefik.enable=false"
  redis:
    image: redis:7
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - "traefik.enable=false"
  downloads-ftp:
    build: ./ftp
    volumes:
      - /home/vincent/downloads:/home/films
    restart: unless-stopped
    environment:
      FILMS_PASSWORD:
    ports:
        - "21:21"
        - "21200-21220:21200-21220"
  jellyfin:
    image: jellyfin/jellyfin
    volumes:
      - /home/vincent/downloads:/media:ro
      - /srv/volumes/jellyfin/cache:/cache
      - /srv/volumes/jellyfin/config:/config
      - /var/log/jellyfin:/var/log/jellyfin
    environment:
      JELLYFIN_LOG_DIR: /var/log/jellyfin/
    restart: unless-stopped
    labels:
      - "traefik.http.routers.jellyfin.rule=Host(`media.${HOST_URL}`)"
      - "traefik.http.routers.jellyfin.entrypoints=https"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.routers.jellyfin.tls.certresolver=default"
      - "traefik.http.routers.jellyfin.middlewares=metric-error"
        #- "traefik.http.routers.jelllyfin-metrics.rule=Path(`/metrics`)"
        #- "traefik.http.routers.jelllyfin-metrics.middlewares=metric-error"
      - "traefik.http.middlewares.metric-error.replacepathregex.regex=^/metrics.*"
      - "traefik.http.middlewares.metric-error.replacepathregex.replacement=/404.html"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.enable=true"
    networks:
      - traefik
      - prometheus
  downloads:
    build: ./nginx
    volumes:
      - /home/vincent/downloads:/var/www/html:ro
    restart: unless-stopped
    labels:
      - "traefik.http.routers.downloads-http.rule=Host(`${HOST_URL}`) && PathPrefix(`/downloads-${DOWNLOADS_TOKEN}`)"
      - "traefik.http.routers.downloads-http.entrypoints=https"
      - "traefik.http.routers.downloads-http.tls=true"
      - "traefik.http.routers.downloads-http.tls.certresolver=default"
      - "traefik.http.services.download-http.loadbalancer.server.port=8080"
      - "traefik.http.routers.downloads-http.middlewares=downloads-http-redirect-slash,downloads-http-stripprefix"
      - "traefik.http.middlewares.downloads-http-stripprefix.stripprefix.prefixes=/downloads-${DOWNLOADS_TOKEN}"
      - "traefik.http.middlewares.downloads-http-redirect-slash.redirectregex.regex=^(https://${HOST_URL}/downloads-${DOWNLOADS_TOKEN})$$"
      - "traefik.http.middlewares.downloads-http-redirect-slash.redirectregex.replacement=$${1}/"
      - "traefik.enable=true"
    networks:
      - traefik
  grafana:
    image: grafana/grafana:latest
    volumes:
      - /home/vincent/docker/grafana/:/var/lib/grafana/
    environment:
      GF_SERVER_ROOT_URL: "https://domos.${HOST_URL}"
      GF_SECURITY_ADMIN_PASSWORD:
      GF_SMTP_HOST: "mailhog:1025"
      GF_SMTP_ENABLED: "true"
    restart: always
    labels:
      - "traefik.http.routers.grafana.rule=Host(`domos.${HOST_URL}`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=default"
      - "traefik.enable=true"
    networks:
      - traefik
      - prometheus
  prometheus:
    image: quay.io/prometheus/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml" 
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=4y"
        #- "--enable-feature=agent"
    volumes:
      - /srv/docker_config/prometheus/:/etc/prometheus/
      - /home/vincent/docker/prometheus/:/prometheus/
    restart: always
    networks:
      - prometheus
    labels:
      - "traefik.enable=false"
  fail2ban_exporter:
    image: registry.gitlab.com/hctrdev/fail2ban-prometheus-exporter
    volumes:
      - /var/run/fail2ban/:/var/run/fail2ban:ro
    networks:
      - prometheus
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    #  - '--web.listen-address=localhost:9100'
    #network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - prometheus
  influxdb:
    image: influxdb:2.7
    volumes:
      - /home/vincent/docker/influxdb2/:/var/lib/influxdb2/
      - /home/vincent/docker/influxdb2_backup/:/backup
      - /home/vincent/docker/influxdb2_etc/:/etc/influxdb2/
    environment:
      DOCKER_INFLUXDB_INIT_USERNAME: "telegraf"
      DOCKER_INFLUXDB_INIT_PASSWORD:
      DOCKER_INFLUXDB_INIT_ORG: domos
      DOCKER_INFLUXDB_INIT_BUCKET: homedb
    restart: always
    labels:
      - "traefik.http.routers.influxdb.rule=Host(`influx.${HOST_URL}`)"
      - "traefik.http.routers.influxdb.entrypoints=https"
      - "traefik.http.routers.influxdb.tls=true"
      - "traefik.http.routers.influxdb.tls.certresolver=default"
      - "traefik.http.services.influxdb.loadbalancer.server.port=8086"
      - "traefik.enable=true"
    networks:
      - traefik
        #  mailhog:
        #    build: ./mailhog/MailHog
        #    image: mailhog
        #    environment:
        #      MH_UI_WEB_PATH: "mailhog"
        #    restart: always
        #    labels:
        #      - "traefik.backend=mailhog"
        #      - "traefik.port=8025"
        #      - "traefik.frontend.rule=PathPrefix:/mailhog"
        #      - "traefik.enable=true"
        #      - "traefik.frontend.auth.basic=admin:$$apr1$$OrF9bgTu$$VC9z4MV/aR3MPBceO55JP1"
        #    networks:
        #      - webgateway
        #    ports:
        #      - "127.0.0.1:25:1025"
  traefik:
    image: traefik:3.2
    #command: --api --docker
    networks:
      - traefik
      - prometheus
    ports:
      - "443:443"
      - "80:80"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/docker_config/traefik/cfg/traefik.yml:/traefik.yml
      - /srv/docker_config/traefik/cfg/acme.json:/acme.json
    environment:
      OVH_APPLICATION_KEY:
      OVH_APPLICATION_SECRET:
      OVH_CONSUMER_KEY:
      OVH_ENDPOINT: ovh-eu
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`${HOST_URL}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.entrypoints=https"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=default"
      - "traefik.http.routers.dashboard.tls.domains[0].main=${HOST_URL}"
      - "traefik.http.routers.dashboard.tls.domains[0].sans=*.${HOST_URL}"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_HTPASSWD}"
      - "traefik.enable=true"
      - "traefik.docker.network=docker_config_traefik"

networks:
  traefik:
    driver: bridge
  database:
    driver: bridge
  prometheus:
    driver: bridge
