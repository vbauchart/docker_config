version: "2"
services:
  vaultwarden:
    image: vaultwarden/server:latest
    user: 1:1000
    environment:
      #ADMIN_TOKEN:
      SIGNUPS_ALLOWED: "false"
      WEBSOCKET_PORT: 443
      WEBSOCKET_ENABLED: "true"
    volumes:
      - /home/vincent/docker/vaultwarden/:/data
    labels:
      - "traefik.http.middlewares.vaultwarden-stripprefix.stripprefix.prefixes=/vaultwarden"
      - "traefik.http.routers.vaultwarden.rule=Host(`${HOST_URL}`) && PathPrefix(`/vaultwarden`)"
      - "traefik.http.routers.vaultwarden.service=vaultwarden"
      - "traefik.http.routers.vaultwarden.entrypoints=https"
      - "traefik.http.routers.vaultwarden.tls=true"
      - "traefik.http.routers.vaultwarden.tls.certresolver=default"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"
      - "traefik.http.routers.vaultwarden.middlewares=vaultwarden-stripprefix"
      - "traefik.http.routers.vaultwarden-websocket.rule=Host(`${HOST_URL}`) && Path(`/vaultwarden/notifications/hub`)"
      - "traefik.http.routers.vaultwarden-websocket.service=vaultwarden-websocket"
      - "traefik.http.routers.vaultwarden-websocket.entrypoints=https"
      - "traefik.http.routers.vaultwarden-websocket.tls=true"
      - "traefik.http.routers.vaultwarden-websocket.tls.certresolver=default"
      - "traefik.http.services.vaultwarden-websocket.loadbalancer.server.port=3012"
      - "traefik.http.routers.vaultwarden-websocket.middlewares=vaultwarden-stripprefix"
      - "traefik.enable=true"
    restart: unless-stopped
    networks:
      - traefik
  gotify:
    image: gotify/server
    environment:
      GOTIFY_DEFAULTUSER_PASS:
    volumes:
      - /home/vincent/docker/gotify/:/app/data
    labels:
      - "traefik.http.middlewares.gotify-stripprefix.stripprefix.prefixes=/gotify"
      - "traefik.http.routers.gotify.rule=Host(`${HOST_URL}`) && PathPrefix(`/gotify`)"
      - "traefik.http.routers.gotify.service=gotify"
      - "traefik.http.routers.gotify.entrypoints=https"
      - "traefik.http.routers.gotify.tls=true"
      - "traefik.http.routers.gotify.tls.certresolver=default"
      - "traefik.http.services.gotify.loadbalancer.server.port=80"
      - "traefik.http.routers.gotify.middlewares=gotify-stripprefix"
      - "traefik.enable=true"
    restart: unless-stopped
    networks:
      - traefik

  transmission:
    build: ./transmission
    ports:
      - "51413:51413/udp"
      - "51413:51413"
    environment:
      TRANSMISSION_PASSWORD:
    networks:
      - traefik
    volumes:
      - /home/vincent/downloads:/var/lib/transmission-daemon/downloads
      - /home/vincent/docker/transmission/cfg/:/etc/transmission-daemon/
    restart: unless-stopped
    labels:
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "traefik.http.routers.transmission.rule=Host(`${HOST_URL}`) && PathPrefix(`/transmission`)"
      - "traefik.http.routers.transmission.entrypoints=https"
      - "traefik.http.routers.transmission.tls=true"
      - "traefik.http.routers.transmission.tls.certresolver=default"
      - "traefik.enable=true"
        #  syncthing:
        #    build: ./syncthing/docker
        #    image: syncthing:latest
        #    networks:
        #      - webgateway
        #    volumes:
        #      - /home/vincent/docker/syncthing:/var/syncthing
        #    restart: always
        #    ports:
        #      - "22000:22000"
        #      - "8384:8384"
  nextcloud:
    build: ./docker-nextcloud
    #image: nextcloud:php8
    networks:
      - traefik
    volumes:
      - /home/vincent/docker/nextcloud:/data/
      - /home/vincent/downloads:/external/downloads
    restart: unless-stopped
    labels:
      - "traefik.http.routers.nextcloud.rule=Host(`${HOST_URL}`) && PathPrefix(`/nextcloud`)"
      - "traefik.http.routers.nextcloud.entrypoints=https"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=default"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-stripprefix"
      - "traefik.http.middlewares.nextcloud-stripprefix.stripprefix.prefixes=/nextcloud"
      - "traefik.enable=true"
        #  postgres96:
        #    build: ./postgres/9.6/alpine/
        #    environment:
        #      POSTGRES_PASSWORD:
        #    networks:
        #      - webgateway
        #    restart: unless-stopped
        #    volumes:
        #      - /home/vincent/docker/postgres:/var/lib/postgresql/data
        #    labels:
        #      - "traefik.enable=false"
  database:
    #build: ./postgres/14/alpine/
    image: postgres:14
    environment:
      POSTGRES_PASSWORD:
    networks:
      - traefik
    restart: unless-stopped
    volumes:
      - /home/vincent/docker/postgres14:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"
  downloads-ftp:
    build: ./ftp
    volumes:
      - /home/vincent/downloads:/home/films
    restart: unless-stopped
    environment:
      FILMS_PASSWORD:
    ports:
        - "21:21"
        - "21200-21220:21200-21220"
  downloads:
    build: ./nginx
    volumes:
      - /home/vincent/downloads:/var/www/html
    restart: unless-stopped
    labels:
      - "traefik.http.routers.downloads-http.rule=Host(`${HOST_URL}`) && PathPrefix(`/downloads-${DOWNLOADS_TOKEN}`)"
      - "traefik.http.routers.downloads-http.entrypoints=https"
      - "traefik.http.routers.downloads-http.tls=true"
      - "traefik.http.routers.downloads-http.tls.certresolver=default"
      - "traefik.http.routers.downloads-http.middlewares=downloads-http-redirect-slash,downloads-http-stripprefix"
      - "traefik.http.middlewares.downloads-http-stripprefix.stripprefix.prefixes=/downloads-${DOWNLOADS_TOKEN}"
      - "traefik.http.middlewares.downloads-http-redirect-slash.redirectregex.regex=^(https://${HOST_URL}/downloads-${DOWNLOADS_TOKEN})$$"
      - "traefik.http.middlewares.downloads-http-redirect-slash.redirectregex.replacement=$${1}/"
      - "traefik.enable=true"
    networks:
      - traefik
        #  jeux:
        #    image: nginx:latest
        #    volumes:
        #      - /home/vincent/dev_clement/web/:/usr/share/nginx/html
        #    restart: unless-stopped
        #    labels:
        #      - "traefik.http.routers.jeux.rule=Host(`${HOST_URL}`) && PathPrefix(`/jeux`)"
        #      - "traefik.http.routers.jeux.entrypoints=https"
        #      - "traefik.http.routers.jeux.tls=true"
        #      - "traefik.http.routers.jeux.tls.certresolver=default"
        #      - "traefik.http.routers.jeux.middlewares=jeux-stripprefix"
        #      - "traefik.http.middlewares.jeux-stripprefix.stripprefix.prefixes=/jeux"
        #      - "traefik.enable=true"
        #    networks:
        #      - traefik
  grafana:
    image: grafana/grafana:latest
    volumes:
      - /home/vincent/docker/grafana/:/var/lib/grafana/
    environment:
      GF_SERVER_ROOT_URL: "https://ns340950.ip-37-59-41.eu/grafana/"
      GF_SECURITY_ADMIN_PASSWORD:
      GF_SMTP_HOST: "mailhog:1025"
      GF_SMTP_ENABLED: "true"
    restart: always
    labels:
      - "traefik.http.routers.grafana.rule=Host(`${HOST_URL}`) && PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=default"
      - "traefik.http.routers.grafana.middlewares=grafana-stripprefix"
      - "traefik.http.middlewares.grafana-stripprefix.stripprefix.prefixes=/grafana"
      - "traefik.enable=true"
    networks:
      - traefik
      - prometheus
  prometheus:
    image: quay.io/prometheus/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml" 
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=4y"
        #- "--enable-feature=agent"
    volumes:
      - /home/docker/build/prometheus/:/etc/prometheus/
      - /home/vincent/docker/prometheus/:/prometheus/
    restart: always
    networks:
      - prometheus
    labels:
      - "traefik.enable=false"
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    #  - '--web.listen-address=localhost:9100'
    #network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - prometheus
  influxdb:
    image: influxdb:2.4
    volumes:
            #- /home/vincent/docker/influxdb/:/var/lib/influxdb/
      - /home/vincent/docker/influxdb2/:/var/lib/influxdb2/
      - /home/vincent/docker/influxdb2_etc/:/etc/influxdb2/
    environment:
            #INFLUXDB_DB: "homedb"
            #INFLUXDB_ADMIN_ENABLED: "true"
            #INFLUXDB_ADMIN_USER: "admin"
            #INFLUXDB_ADMIN_PASSWORD:
            #INFLUXDB_HTTP_AUTH_ENABLED: "true"
            #INFLUXDB_USER: "telegraf"
            #INFLUXDB_USER_PASSWORD:
      DOCKER_INFLUXDB_INIT_USERNAME: "telegraf"
      DOCKER_INFLUXDB_INIT_PASSWORD:
      DOCKER_INFLUXDB_INIT_ORG: domos
      DOCKER_INFLUXDB_INIT_BUCKET: homedb
      #DOCKER_INFLUXDB_INIT_MODE: upgrade
      #DOCKER_INFLUXDB_INIT_RETENTION: Duration for the initial bucketâ€™s retention period. If not set, the initial bucket will retain data forever.
      #DOCKER_INFLUXDB_INIT_ADMIN_TOKEN:
    restart: always
    labels:
            #- "traefik.backend=influxdb"
            #- "traefik.port=8086"
            #- "traefik.frontend.rule=PathPrefixStrip:/influxdb"
            #- "traefik.enable=true"
      - "traefik.http.routers.influxdb.rule=Host(`${HOST_URL}`) && PathPrefix(`/influxdb`)"
      - "traefik.http.routers.influxdb.entrypoints=https"
      - "traefik.http.routers.influxdb.tls=true"
      - "traefik.http.routers.influxdb.tls.certresolver=default"
      - "traefik.http.routers.influxdb.middlewares=influxdb-stripprefix"
      - "traefik.http.middlewares.influxdb-stripprefix.stripprefix.prefixes=/influxdb"
      - "traefik.http.services.influxdb.loadbalancer.server.port=8086"
      - "traefik.enable=true"
    networks:
      - traefik
        #  mailhog:
        #    build: ./mailhog/MailHog
        #    image: mailhog
        #    environment:
        #      MH_UI_WEB_PATH: "mailhog"
        #    restart: always
        #    labels:
        #      - "traefik.backend=mailhog"
        #      - "traefik.port=8025"
        #      - "traefik.frontend.rule=PathPrefix:/mailhog"
        #      - "traefik.enable=true"
        #      - "traefik.frontend.auth.basic=admin:$$apr1$$OrF9bgTu$$VC9z4MV/aR3MPBceO55JP1"
        #    networks:
        #      - webgateway
        #    ports:
        #      - "127.0.0.1:25:1025"
  traefik:
    image: traefik:2.10
    #command: --api --docker
    networks:
      - traefik
      - prometheus
    ports:
      - "443:443"
      - "80:80"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/docker/build/traefik/cfg/traefik.yml:/traefik.yml
      - /home/docker/build/traefik/cfg/acme.json:/acme.json
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`${HOST_URL}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.entrypoints=https"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=default"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_HTPASSWD}"
      - "traefik.enable=true"
      - "traefik.docker.network=build_traefik"
        #  weboob:
        #    build: ./weboob/
        #    image: weboob:custom
        #    volumes:
        #            #- /root/.gnupg/:/root/.gnupg/:ro
        #      - /root/.password-store/:/root/.password-store/:ro
        #      - /home/vincent/encfs_mount/weboob:/root/.config/weboob
        #      - /home/vincent/encfs_mount/weboob/pass.txt:/home/vincent/encfs_mount/weboob/pass.txt:ro
        #      - monitoring:/weboob_output/
        #      - /tmp/weboob:/tmp/weboob/
        #    labels:
        #      - "traefik.enable=false"
        #  ejabberd:
        #    build: ./ejabberd
        #    image: ejabberd
        #    volumes:
        #      - /home/vincent/docker/ejabberd/ejabberd.pem:/etc/ejabberd/ejabberd.pem
        #      - /home/vincent/docker/ejabberd/ejabberd.yml:/etc/ejabberd/ejabberd.yml
        #      - /home/vincent/docker/ejabberd/xcauth.conf:/etc/xcauth.conf:ro
        #    ports:
        #      - "5222:5222"
        #      - "5269:5269"
        #    networks:
        #      - webgateway
        #    restart: always
        #    labels:
        #      - "traefik.backend=ejabberd_http"
        #      - "traefik.port=5280"
        #      - "traefik.frontend.rule=PathPrefix:/ejabberd"
        #      - "traefik.enable=true"
        #  elastic:
        #    image: elastic-custom
        #    build: elastic
        #    environment:
        #      discovery.type: single-node
        #      xpack.ml.enabled: "false"
        #      #  ES_JAVA_OPTS: "-Xms256m -Xmx256m"
        #    volumes:
        #      - /home/vincent/docker/elastic/data:/usr/share/elasticsearch/data
        #    mem_limit: 512M
        #    networks:
        #      - webgateway
        #  openvpn:
        #    image: kylemanna/openvpn
        #    volumes:
        #      - /home/vincent/docker/openvpn/:/etc/openvpn/



networks:
  traefik:
    driver: bridge
  prometheus:
    driver: bridge

